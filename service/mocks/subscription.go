// Code generated by MockGen. DO NOT EDIT.
// Source: subscription.go

// Package servicemocks is a generated GoMock package.
package servicemocks

import (
	reflect "reflect"

	types "github.com/basicrum/front_basicrum_go/types"
	gomock "github.com/golang/mock/gomock"
)

// MockISubscriptionService is a mock of ISubscriptionService interface.
type MockISubscriptionService struct {
	ctrl     *gomock.Controller
	recorder *MockISubscriptionServiceMockRecorder
}

// MockISubscriptionServiceMockRecorder is the mock recorder for MockISubscriptionService.
type MockISubscriptionServiceMockRecorder struct {
	mock *MockISubscriptionService
}

// NewMockISubscriptionService creates a new mock instance.
func NewMockISubscriptionService(ctrl *gomock.Controller) *MockISubscriptionService {
	mock := &MockISubscriptionService{ctrl: ctrl}
	mock.recorder = &MockISubscriptionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISubscriptionService) EXPECT() *MockISubscriptionServiceMockRecorder {
	return m.recorder
}

// GetSubscription mocks base method.
func (m *MockISubscriptionService) GetSubscription(subscriptionID, hostname string) (*types.Lookup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSubscription", subscriptionID, hostname)
	ret0, _ := ret[0].(*types.Lookup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSubscription indicates an expected call of GetSubscription.
func (mr *MockISubscriptionServiceMockRecorder) GetSubscription(subscriptionID, hostname interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSubscription", reflect.TypeOf((*MockISubscriptionService)(nil).GetSubscription), subscriptionID, hostname)
}

// Load mocks base method.
func (m *MockISubscriptionService) Load() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(error)
	return ret0
}

// Load indicates an expected call of Load.
func (mr *MockISubscriptionServiceMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockISubscriptionService)(nil).Load))
}
